import org.gradle.internal.os.OperatingSystem;
plugins {
  id 'org.springframework.boot' version '2.0.6.RELEASE'
  id 'io.spring.dependency-management' version '1.0.8.RELEASE'
  id 'java'
  id 'idea'
  id 'eclipse-wtp'
  id 'war'
  id 'jacoco'
  id "org.sonarqube" version "3.1.1"
  id 'project-report'
}

group = 'com.delta.dms'
version = '1.0.0'
sourceCompatibility = 1.8

compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

def swaggerTargetFolder  = '/src/swagger'
def swaggerControllerFolder  = '/src/main/java/com/delta/dms/community/swagger/controller'
def swaggerModelFolder  = '/src/main/java/com/delta/dms/community/swagger/model'

sonarqube {
  properties {
    property "sonar.host.url", "http://dmssq.deltaww.com"
    property "sonar.login", "admin"
    property "sonar.password", "P@ssw0rd"
    property "sonar.projectName", "DmsCommunityBackEnd"
    property "sonar.projectKey", "DmsCommunityBackEnd"
    property "sonar.exclusions", "src/main/java/com/delta/dms/community/**/entity/*.java"
  }
}

jacocoTestReport {
  reports {
    xml.enabled true
    html.enabled true
  }
  
  afterEvaluate {
    classDirectories.setFrom(files(classDirectories.files.collect {
      fileTree(dir: it, 
        exclude: [
          'com/delta/dms/community/swagger/*',
          'com/delta/dms/community/model/*',
          'com/delta/dms/community/dao/*',
          'com/delta/dms/community/app/*',
          'com/delta/dms/community/config/*',
          'com/delta/dms/community/converter/*',
          'com/delta/dms/community/adapter/entity/*',
          'com/delta/dms/community/utils/*Constants.*'
        ])
    }))
  }
}

repositories {
  maven {
    credentials {
      username "service.dmsadmin"
      password "Passw0rd"
    }
    url "http://dmsrepo.deltaww.com/repository/maven-public/"
  }
  mavenCentral()
  maven{url "https://repo.spring.io/snapshot"}
  maven{url "https://repo.spring.io/milestone"}
}

configurations.all {
  resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
  resolutionStrategy.eachDependency { DependencyResolveDetails details ->
    if (details.requested.group == 'org.apache.logging.log4j') {
      details.useVersion '2.17.1'
    }
  }
}

configurations {
  swaggerLib
}

sourceSets {
    dbTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/db-test/java')
        }
        resources.srcDir file('src/db-test/resources')
    }
}

task dbTest(type: Test) {
    testLogging.showStandardStreams = true
    testClassesDirs = project.files {sourceSets.dbTest.output.classesDirs}
    logger.lifecycle("${sourceSets.dbTest.output.classesDirs}")
    classpath = sourceSets.dbTest.runtimeClasspath
}

dependencyManagement {
  imports {
    mavenBom "org.springframework.cloud:spring-cloud-dependencies:Finchley.RELEASE"
  }
}

dependencies {
  implementation (
    'org.springframework.boot:spring-boot-starter-web',
    'org.springframework.boot:spring-boot-starter-data-jpa',
    'org.springframework.boot:spring-boot-starter-velocity:1.1.3.RELEASE',
    'org.springframework.boot:spring-boot-starter-thymeleaf',
    'org.springframework.boot:spring-boot-starter-actuator',
    'org.springframework.boot:spring-boot-starter-aop',
    'org.springframework.cloud:spring-cloud-config-client',
    'org.springframework.cloud:spring-cloud-starter-bus-amqp',
    'org.springframework.retry:spring-retry',
    'org.springframework:spring-context-support:4.3.15.RELEASE',
    'org.springframework.integration:spring-integration-smb:1.2.0.RELEASE',
    'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.1',
    'com.github.pagehelper:pagehelper-spring-boot-starter:1.2.12',
    'org.mariadb.jdbc:mariadb-java-client:2.2.1',
    'io.springfox:springfox-swagger2:2.9.2',
    'io.springfox:springfox-swagger-ui:2.9.2',
    'com.delta.dms:DMS_Utils:2.0.3-SNAPSHOT',
    'com.delta.datahive:ActivityLogAPI:1.3.3-SNAPSHOT',
    'com.delta.datahive:DataHiveAPI:2.11.13-SNAPSHOT',
    'com.delta.datahive:SearchAPI:2.9.4-SNAPSHOT',
    'commons-fileupload:commons-fileupload:1.3.3',
    'commons-io:commons-io:2.6',
    'com.fasterxml.jackson.core:jackson-core:2.9.8',
    'com.jayway.jsonpath:json-path:2.1.0',
    'javax.validation:validation-api:2.0.1.Final',
    'com.google.code.findbugs:jsr305:3.0.2',
    'org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.2.0',
    'com.turo:pushy:0.13.5',
    'org.hibernate:hibernate-validator:5.4.1.Final',
    'com.sun.mail:javax.mail:1.6.1',
    'org.jsoup:jsoup:1.11.3',
    'org.apache.poi:poi:4.1.2',
    'org.apache.poi:poi-ooxml:4.1.2'
  )
  
  compileOnly (
    'org.projectlombok:lombok:1.18.12'
  )
  
  annotationProcessor (
    'org.projectlombok:lombok:1.18.12'
  )
  
  testImplementation (
    'org.springframework.boot:spring-boot-starter-test',
    'org.powermock:powermock-module-junit4:2.0.6',
    'org.powermock:powermock-api-mockito2:2.0.6',
    'ch.vorburger.mariaDB4j:mariaDB4j:2.2.3',
    'com.zaxxer:HikariCP:2.7.6'
  )
  
  providedRuntime (
    'org.springframework.boot:spring-boot-starter-tomcat'
  )
  
  swaggerLib (
    'com.delta.iad:dms-swagger-codegen:1.0.0',
    'io.swagger.codegen.v3:swagger-codegen-cli:3.0.20'
  )
}

task copySwaggerController(type: Copy) {
  from 'src/swagger/src/main/java/com/delta/dms/community/swagger/controller'
  into 'src/main/java/com/delta/dms/community/swagger/controller'
}

task copySwaggerModel(type: Copy) {
  from 'src/swagger/src/main/java/com/delta/dms/community/swagger/model'
  into 'src/main/java/com/delta/dms/community/swagger/model'
}

task swaggerCodegen(type:Exec) {
  def delimiter = OperatingSystem.current().isWindows() ? ';' : ':';
  commandLine 'java','-Dlogback.configurationFile=./src/main/resources/logback-swagger.xml', '-cp', 'src/swagger-lib/dms-swagger-codegen.jar' + delimiter + 'src/swagger-lib/swagger-codegen-cli.jar', 'io.swagger.codegen.v3.cli.SwaggerCodegen', 'generate', '-l', 'dms', '-DserializableModel=true', '-i', 'src/main/resources/swagger/swagger.yml', '--template-engine', 'mustache', '-o', 'src/swagger', '--model-package', 'com.delta.dms.community.swagger.model', '--api-package', 'com.delta.dms.community.swagger.controller'
}

task copySwaggerCodegenLib(type: Copy) {
  from configurations.swaggerLib
  into 'src/swagger-lib/'
  rename ('(.*)-\\d+\\.\\d+\\.\\d+(.*)', '$1$2')
}

clean.doFirst {
  delete("${projectDir}/$swaggerControllerFolder")
  delete("${projectDir}/$swaggerModelFolder")
  delete("${projectDir}/$swaggerTargetFolder")
}

tasks.compileJava.dependsOn copySwaggerModel
tasks.copySwaggerModel.dependsOn copySwaggerController
tasks.copySwaggerController.dependsOn swaggerCodegen
tasks.swaggerCodegen.dependsOn copySwaggerCodegenLib
tasks.copySwaggerCodegenLib.dependsOn clean

bootWar {
  archiveName "community.war"
}

springBoot {
  buildInfo {
    properties {
      group = "dms"
      name = "community"
    }
  }
}
